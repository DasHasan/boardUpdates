application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName boardUpdates
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework angularX
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1632055175521
    databaseType sql
    devDatabaseType mysql
    dtoSuffix DTO
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    entitySuffix Entity
    jhiPrefix jhi
    jhipsterVersion "7.0.1"
    jwtSecretKey "N2FlZTNhZGYxMGNmYmZjMzViOGNjZWRiNGIwYzY4YWRmMWQ1M2QyNTgzZmZhMmFmMjg2NjJhNWRlYjQxOGRlNjBlM2E5M2VjMGMzNThkMzBhYTI3NTQwNTYzZjQzMjE3N2FkMDQ5MjBmODIxZDk4NjNkOTZlOTdlMmRhNDYxOTY="
    languages [de]
    messageBroker false
    nativeLanguage de
    otherModules []
    packageName lwi.vision
    prodDatabaseType mysql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType false
    skipClient false
    skipServer false
    skipUserManagement false
    testFrameworks []
    websocket false
    withAdminUi true
  }

  entities Board, BoardUpdate, Firmware, FirmwareUpdate, Group, Software, SoftwareUpdate, UpdateKeys
}

entity Board {
  serial String
}
entity BoardUpdate {
  version String
  path String
  type UpdateType
  releaseDate ZonedDateTime
}
entity Firmware {
  version String
  path String
}
entity FirmwareUpdate {
  active Boolean
}
entity Group (jhi_group) {
  name String
}
entity Software {
  version String
  path String
}
entity SoftwareUpdate {
  active Boolean
}
entity UpdateKeys {
  key String
}
enum UpdateType {
  FIRMWARE (Firmware),
  SOFTWARE (Software)
}

relationship OneToMany {
  Board{firmware(version)} to Firmware{board(serial)}
  Board{software(version)} to Software{board(serial)}
  BoardUpdate to UpdateKeys
}
relationship ManyToOne {
  BoardUpdate{board(serial)} to Board
  FirmwareUpdate{board(serial)} to Board
  FirmwareUpdate{from(version)} to Firmware
  FirmwareUpdate{to(version)} to Firmware
  SoftwareUpdate{board(serial)} to Board
  SoftwareUpdate{from(version)} to Software
  SoftwareUpdate{to(version)} to Software
}

service Board, BoardUpdate, Firmware, FirmwareUpdate, Group, Software, SoftwareUpdate, UpdateKeys with serviceClass
filter Board, BoardUpdate, UpdateKeys
